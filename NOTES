
* issues
** don't nub test names ? (for testing $$ with multithreaded)
$ shelltest tests/add-bad-date-fails.test tests/add-bad-date-fails.test 
:tests/add-bad-date-fails.test: [OK]

** regexp ignored (unquoted /)
# simple add with no existing journal, no commodity entered
 rm -f add-default-commodity-$$.j; bin/hledger -f add-default-commodity-$$.j add; rm -f add-default-commodity-$$.j
<<<


a
1000
b

.
>>> /lkdjsljdf^date [2010/11/16]: description []: account 1: amount  1: account 2: amount  2 [-1000]: account 3: date [2010/11/16]: $/

$ shelltest tests/add-default-commodity.test 
:tests/add-default-commodity.test:1: [OK]

** unknown args give test-framework's usage, we should integrate more clearly
** unparseable test files and uncompilable regexps are counted as test failures - ok ?
** error in one test stops all
$ LANG= make test
ghc --make -threaded -W -fwarn-tabs -Werror -L/usr/lib shelltest.hs
./shelltest tests -j8
shelltest: tests/unicode-проверка.test: hGetContents: invalid argument (Illegal byte sequence)
make: *** [test] Error 1

* wishlist
** test runner issues
*** no way to turn off progress output & final summary
*** no obvious way to see test runner help
** timeout for commands
** configurable delimiters
>  Field delimiters other than the default <<<, >>>, >>>2 and >>>= may be
>  specified with the --stdin-marker, --stdout-marker, --stderr-marker and
>  --exitcode-marker options.

>  ,Arg {argIndex = StdinMarkerOption,
>        argName  = Just "stdin-marker",
>        argAbbr  = Nothing,
>        argData  = argDataDefaulted "string" ArgtypeString "<<<",
>        argDesc  = "marker for the stdin field (default: <<<)"
>       }
>  ,Arg {argIndex = StdoutMarkerOption,
>        argName  = Just "stdout-marker",
>        argAbbr  = Nothing,
>        argData  = argDataDefaulted "string" ArgtypeString ">>>",
>        argDesc  = "marker for the stdout field (default: >>>)"
>       }
>  ,Arg {argIndex = StderrMarkerOption,
>        argName  = Just "stderr-marker",
>        argAbbr  = Nothing,
>        argData  = argDataDefaulted "string" ArgtypeString ">>>2",
>        argDesc  = "marker for the stderr field (default: >>>2)"
>       }
>  ,Arg {argIndex = ExitcodeMarkerOption,
>        argName  = Just "exitcode-marker",
>        argAbbr  = Nothing,
>        argData  = argDataDefaulted "string" ArgtypeString ">>>=",
>        argDesc  = "marker for the exit code field (default: >>>=)"
>       }

